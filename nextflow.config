//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    fastq = null
    out_dir = "output"
    samples = null
    sanitize_fastq = false
    wfversion = "latest"
}


executor {
    $local {
        cpus = 8
        memory = "16 GB"
        queueSize = 2
    }
}

profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
        process {
            withLabel:mtdnaserver { 
                container = "us.gcr.io/broad-dsde-methods/haplochecker:haplochecker-0124" 
                cpus = 2
                memory = 3.GB
            }
            withLabel:human_mito { 
                container = "taniguti/wf-human-mito:v0.1.2" 
                cpus = 4
                memory = 5.GB
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
        process {
            withLabel:mtdnaserver { 
                container = "us.gcr.io/broad-dsde-methods/haplochecker:haplochecker-0124" 
                cpus = 2
                memory = 3.GB
            }
            withLabel:human_mito { 
                container = "taniguti/wf-human-mito:v0.1.2" 
                cpus = 4
                memory = 5.GB
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
            executor = "slurm"
        }
    }


}


timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
dag {
  enabled = true
  file = "${params.out_dir}/execution/pipeline.svg"
}
